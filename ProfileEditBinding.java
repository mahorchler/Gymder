// Generated by view binder compiler. Do not edit!
package com.group213.gymder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.group213.gymder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProfileEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View divider5;

  @NonNull
  public final EditText editAddress;

  @NonNull
  public final EditText editAge;

  @NonNull
  public final Button editConfirm;

  @NonNull
  public final EditText editConfirmPassword;

  @NonNull
  public final EditText editEmail;

  @NonNull
  public final EditText editInterests;

  @NonNull
  public final EditText editName;

  @NonNull
  public final EditText editPassword;

  @NonNull
  public final EditText editUsername;

  private ProfileEditBinding(@NonNull ConstraintLayout rootView, @NonNull View divider5,
      @NonNull EditText editAddress, @NonNull EditText editAge, @NonNull Button editConfirm,
      @NonNull EditText editConfirmPassword, @NonNull EditText editEmail,
      @NonNull EditText editInterests, @NonNull EditText editName, @NonNull EditText editPassword,
      @NonNull EditText editUsername) {
    this.rootView = rootView;
    this.divider5 = divider5;
    this.editAddress = editAddress;
    this.editAge = editAge;
    this.editConfirm = editConfirm;
    this.editConfirmPassword = editConfirmPassword;
    this.editEmail = editEmail;
    this.editInterests = editInterests;
    this.editName = editName;
    this.editPassword = editPassword;
    this.editUsername = editUsername;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProfileEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProfileEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.profile_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProfileEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider5;
      View divider5 = ViewBindings.findChildViewById(rootView, id);
      if (divider5 == null) {
        break missingId;
      }

      id = R.id.editAddress;
      EditText editAddress = ViewBindings.findChildViewById(rootView, id);
      if (editAddress == null) {
        break missingId;
      }

      id = R.id.editAge;
      EditText editAge = ViewBindings.findChildViewById(rootView, id);
      if (editAge == null) {
        break missingId;
      }

      id = R.id.editConfirm;
      Button editConfirm = ViewBindings.findChildViewById(rootView, id);
      if (editConfirm == null) {
        break missingId;
      }

      id = R.id.editConfirmPassword;
      EditText editConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (editConfirmPassword == null) {
        break missingId;
      }

      id = R.id.editEmail;
      EditText editEmail = ViewBindings.findChildViewById(rootView, id);
      if (editEmail == null) {
        break missingId;
      }

      id = R.id.editInterests;
      EditText editInterests = ViewBindings.findChildViewById(rootView, id);
      if (editInterests == null) {
        break missingId;
      }

      id = R.id.editName;
      EditText editName = ViewBindings.findChildViewById(rootView, id);
      if (editName == null) {
        break missingId;
      }

      id = R.id.editPassword;
      EditText editPassword = ViewBindings.findChildViewById(rootView, id);
      if (editPassword == null) {
        break missingId;
      }

      id = R.id.editUsername;
      EditText editUsername = ViewBindings.findChildViewById(rootView, id);
      if (editUsername == null) {
        break missingId;
      }

      return new ProfileEditBinding((ConstraintLayout) rootView, divider5, editAddress, editAge,
          editConfirm, editConfirmPassword, editEmail, editInterests, editName, editPassword,
          editUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
